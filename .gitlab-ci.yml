stages:
  - test
  - build
  - release

workflow:
  rules:
    - if: '$CI_COMMIT_TAG =~ /\-rc.*/'
      variables:
        DEPLOY_VARIABLE: "preprod"
    - if: $CI_COMMIT_TAG
      variables:
        DEPLOY_VARIABLE: "prod"
    - if: '$CI_MERGE_REQUEST_ID'
      variables:
        DEPLOY_VARIABLE: "staging"
    - when: never

build_docker_image: &build_docker_image
  stage: build
  tags:
    - kubernetes
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: ['']
  rules:
    - if: '$DEPLOY_VARIABLE == "prod"'
      when: on_success
      allow_failure: false
    - if: '$DEPLOY_VARIABLE == "preprod"'
      when: on_success
    - when: never
  environment: 
    name: $DEPLOY_VARIABLE
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"},\"$CI_DEPENDENCY_PROXY_SERVER\":{\"username\":\"$CI_DEPENDENCY_PROXY_USER\",\"password\":\"$CI_DEPENDENCY_PROXY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - |-
      environment=${DEPLOY_VARIABLE}
      args="--destination ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"

      eval "/kaniko/executor \
        --cache \
        --context ${CI_PROJECT_DIR} \
        --build-arg SSH_PRIVATE_KEY='${SSH_PRIVATE_KEY}' \
        --build-arg WEBCOMPONENT_ENDPOINT='${WEBCOMPONENT_ENDPOINT}' \
        --build-arg WEBCOMPONENT_API_ENDPOINT='${WEBCOMPONENT_API_ENDPOINT}' \
        --build-arg KMEET_ENDPOINT='${KMEET_ENDPOINT}' \
        --build-arg ENVIRONMENT=${environment} \
        --dockerfile ${CI_PROJECT_DIR}/Dockerfile \
        ${args}"

unit_test:
  stage: test
  image: node:16.14.2-bullseye
  tags:
    - docker-executor
    - kubernetes
    - shared
  environment: 
    name: $DEPLOY_VARIABLE
  artifacts:
    paths:
      - coverage/
    when: on_success
    reports:
      junit:
        - coverage/junit.xml
  coverage: '/^\s*Lines\s*: \d+\d+.\d+\d+\%/'
  cache:
    key:
      files:
        - package-lock.json
      prefix: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/
      - node_modules/
      - coverage/
  before_script:
    - npm ci --cache .npm
  script:
    # typescript
    # - npm run check-types

    # lint
    # - npm run check

    # unit tests
    - npm run test-ci

pages:
  stage: test
  needs: ['unit_test']
  script:
    - mkdir .public
    - cp -r coverage/* .public
    - mv .public public
  artifacts:
    paths:
      - public

changelog:
  stage: release
  image: mrnonz/alpine-git-curl
  needs: ['unit_test']
  rules:
    - if: '$DEPLOY_VARIABLE == "prod"'
      when: on_success
      allow_failure: false
    - when: never
  script:
    - './gitlab-changelog.sh ${GITLAB_TOKEN} ${CI_COMMIT_TAG}'

git_release:
  stage: release
  tags:
    - docker-executor
    - kubernetes
    - shared
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  release:
    name: '$CI_COMMIT_TAG'
    description": '$$CHANGELOG',
    # tag_name is a mendatory field and can not be an empty string
    tag_name: '$CI_COMMIT_TAG'
  rules:
    - if: '$DEPLOY_VARIABLE == "prod"'
      when: on_success
    - if: '$DEPLOY_VARIABLE == "preprod"'
      when: on_success
    - when: never
