// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/StatusDropdown should match snapshot in default state 1`] = `
<MenuWrapper
  animationComponent={[Function]}
  className="status-dropdown-menu status-dropdown-menu-global-header"
  onToggle={[Function]}
  open={false}
>
  <button
    aria-controls="statusDropdownMenu"
    aria-expanded={false}
    aria-label="Current status: Away. Select to open profile and status menu."
    className="status-wrapper style--none"
  >
    <Memo(CustomStatusEmoji)
      emojiStyle={
        Object {
          "marginRight": "6px",
        }
      }
      onClick={[Function]}
      showTooltip={true}
      tooltipDirection="bottom"
    />
    <div
      className="status"
    >
      <StatusIcon
        size="sm"
        status="away"
      />
    </div>
  </button>
  <Menu
    ariaLabel="Set a status"
    id="statusDropdownMenu"
    listId="status-drop-down-menu-list"
  >
    <MenuHeader>
      <div
        className="username-wrapper"
      >
        <Text
          className="bold"
          margin="none"
        >
          Nev Aa
        </Text>
        <Text
          className="contrast"
          color="inherit"
          margin="none"
        >
          @undefined
        </Text>
      </div>
    </MenuHeader>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Out of office"
        extraText="Automatic Replies are enabled"
        onClick={[Function]}
        show={false}
        text="Out of office"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Online"
        icon={
          <StatusIcon
            className="status-icon"
            status="online"
          />
        }
        id="status-menu-online"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        sibling={false}
        text="Online"
      />
      <MenuItemAction
        ariaLabel="Away"
        icon={
          <StatusIcon
            className="status-icon"
            status="away"
          />
        }
        id="status-menu-away"
        onClick={[Function]}
        rightDecorator={
          <CheckIcon
            color="var(--button-bg)"
            size={16}
          />
        }
        show={true}
        text="Away"
      />
      <SubMenuItem
        ariaLabel="Do not disturb. Disables all notifications"
        direction="left"
        extraText="Disables all notifications"
        icon={
          <StatusIcon
            className="status-icon"
            status="dnd"
          />
        }
        id="status-menu-dnd"
        openUp={false}
        renderSelected={true}
        rightDecorator={false}
        show={true}
        subMenu={
          Array [
            Object {
              "direction": "right",
              "id": "dndSubMenu-header",
              "isHeader": true,
              "text": "Disable notifications until:",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-thirty_minutes",
              "text": "30 mins",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-one_hour",
              "text": "1 hour",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-two_hours",
              "text": "2 hours",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-tomorrow",
              "text": <React.Fragment>
                Tomorrow
                <span
                  className="dndTime-tomorrow_timestamp"
                >
                  <FormattedDate
                    value={2021-11-03T09:00:57.000Z}
                    weekday="short"
                  />
                  , 
                  <FormattedTime
                    hour12={true}
                    timeStyle="short"
                    value={2021-11-03T09:00:57.000Z}
                  />
                </span>
              </React.Fragment>,
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-custom",
              "text": "Custom",
            },
          ]
        }
        subMenuClass="pl-4"
        text="Do not disturb"
      />
      <MenuItemAction
        ariaLabel="Offline"
        icon={
          <StatusIcon
            className="status-icon"
            status="offline"
          />
        }
        id="status-menu-offline"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        text="Offline"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Profile"
        icon={
          <AccountOutlineIcon
            className="profile__icon"
            color="rgba(var(--center-channel-color-rgb), 0.56)"
            size={16}
          />
        }
        id="accountSettings"
        modalId="user_settings"
        onClick={[Function]}
        show={true}
        sibling={false}
        text="Profile"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <span
        className="logout__icon"
      >
        <MenuItemAction
          icon={
            <ExitToAppIcon
              color="rgba(var(--center-channel-color-rgb), 0.56)"
              size={16}
            />
          }
          id="logout"
          onClick={[Function]}
          show={true}
          text="Log Out"
        />
      </span>
    </Memo(MenuGroup)>
  </Menu>
</MenuWrapper>
`;

exports[`components/StatusDropdown should match snapshot with custom status and expiry 1`] = `
<MenuWrapper
  animationComponent={[Function]}
  className="status-dropdown-menu status-dropdown-menu-global-header active"
  onToggle={[Function]}
  open={true}
>
  <button
    aria-controls="statusDropdownMenu"
    aria-expanded={true}
    aria-label="Current status: Away. Select to open profile and status menu."
    className="status-wrapper style--none"
  >
    <Memo(CustomStatusEmoji)
      emojiStyle={
        Object {
          "marginRight": "6px",
        }
      }
      onClick={[Function]}
      showTooltip={true}
      tooltipDirection="bottom"
    />
    <div
      className="status"
    >
      <StatusIcon
        size="sm"
        status="away"
      />
    </div>
  </button>
  <Menu
    ariaLabel="Set a status"
    id="statusDropdownMenu"
    listId="status-drop-down-menu-list"
  >
    <MenuHeader>
      <div
        className="username-wrapper"
      >
        <Text
          className="bold"
          margin="none"
        >
          Nev Aa
        </Text>
        <Text
          className="contrast"
          color="inherit"
          margin="none"
        >
          @undefined
        </Text>
      </div>
    </MenuHeader>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Out of office"
        extraText="Automatic Replies are enabled"
        onClick={[Function]}
        show={false}
        text="Out of office"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemToggleModalRedux
        ariaLabel="In a meeting"
        className="MenuItem__primary-text custom_status__row"
        dialogType={[Function]}
        id="status-menu-custom-status"
        modalId="custom_status"
        show={true}
      >
        <span
          className="custom_status__container"
        >
          <span
            className="custom_status__icon"
          >
            <span
              className="d-flex"
            >
              <Memo(CustomStatusEmoji)
                emojiStyle={
                  Object {
                    "marginLeft": 0,
                  }
                }
                showTooltip={false}
              />
            </span>
          </span>
          <CustomStatusText
            className="custom_status__text"
            text="In a meeting"
            tooltipDirection="bottom"
          />
          <div
            className="status-dropdown-menu__clear-container input-clear visible"
            onClick={[Function]}
            onTouchEnd={[Function]}
          >
            <OverlayTrigger
              defaultOverlayShown={false}
              delayShow={400}
              overlay={
                <Tooltip
                  id="InputClearTooltip"
                >
                  <Memo(MemoizedFormattedMessage)
                    defaultMessage="Clear"
                    id="input.clear"
                  />
                </Tooltip>
              }
              placement="left"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <span
                aria-hidden="true"
                className="input-clear-x"
              >
                <i
                  className="icon icon-close-circle"
                />
              </span>
            </OverlayTrigger>
          </div>
        </span>
        <Memo(ExpiryTime)
          className="custom_status__expiry padded"
          time="2021-05-03T23:59:59.000Z"
          withinBrackets={true}
        />
      </MenuItemToggleModalRedux>
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Online"
        icon={
          <StatusIcon
            className="status-icon"
            status="online"
          />
        }
        id="status-menu-online"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        sibling={false}
        text="Online"
      />
      <MenuItemAction
        ariaLabel="Away"
        icon={
          <StatusIcon
            className="status-icon"
            status="away"
          />
        }
        id="status-menu-away"
        onClick={[Function]}
        rightDecorator={
          <CheckIcon
            color="var(--button-bg)"
            size={16}
          />
        }
        show={true}
        text="Away"
      />
      <SubMenuItem
        ariaLabel="Do not disturb. Disables all notifications"
        direction="left"
        extraText="Disables all notifications"
        icon={
          <StatusIcon
            className="status-icon"
            status="dnd"
          />
        }
        id="status-menu-dnd"
        openUp={false}
        renderSelected={true}
        rightDecorator={false}
        show={true}
        subMenu={
          Array [
            Object {
              "direction": "right",
              "id": "dndSubMenu-header",
              "isHeader": true,
              "text": "Disable notifications until:",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-thirty_minutes",
              "text": "30 mins",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-one_hour",
              "text": "1 hour",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-two_hours",
              "text": "2 hours",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-tomorrow",
              "text": <React.Fragment>
                Tomorrow
                <span
                  className="dndTime-tomorrow_timestamp"
                >
                  <FormattedDate
                    value={2021-11-03T09:00:57.000Z}
                    weekday="short"
                  />
                  , 
                  <FormattedTime
                    hour12={true}
                    timeStyle="short"
                    value={2021-11-03T09:00:57.000Z}
                  />
                </span>
              </React.Fragment>,
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-custom",
              "text": "Custom",
            },
          ]
        }
        subMenuClass="pl-4"
        text="Do not disturb"
      />
      <MenuItemAction
        ariaLabel="Offline"
        icon={
          <StatusIcon
            className="status-icon"
            status="offline"
          />
        }
        id="status-menu-offline"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        text="Offline"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Profile"
        icon={
          <AccountOutlineIcon
            className="profile__icon"
            color="rgba(var(--center-channel-color-rgb), 0.56)"
            size={16}
          />
        }
        id="accountSettings"
        modalId="user_settings"
        onClick={[Function]}
        show={true}
        sibling={false}
        text="Profile"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <span
        className="logout__icon"
      >
        <MenuItemAction
          icon={
            <ExitToAppIcon
              color="rgba(var(--center-channel-color-rgb), 0.56)"
              size={16}
            />
          }
          id="logout"
          onClick={[Function]}
          show={true}
          text="Log Out"
        />
      </span>
    </Memo(MenuGroup)>
  </Menu>
</MenuWrapper>
`;

exports[`components/StatusDropdown should match snapshot with custom status enabled 1`] = `
<MenuWrapper
  animationComponent={[Function]}
  className="status-dropdown-menu status-dropdown-menu-global-header active"
  onToggle={[Function]}
  open={true}
>
  <button
    aria-controls="statusDropdownMenu"
    aria-expanded={true}
    aria-label="Current status: Away. Select to open profile and status menu."
    className="status-wrapper style--none"
  >
    <Memo(CustomStatusEmoji)
      emojiStyle={
        Object {
          "marginRight": "6px",
        }
      }
      onClick={[Function]}
      showTooltip={true}
      tooltipDirection="bottom"
    />
    <div
      className="status"
    >
      <StatusIcon
        size="sm"
        status="away"
      />
    </div>
  </button>
  <Menu
    ariaLabel="Set a status"
    id="statusDropdownMenu"
    listId="status-drop-down-menu-list"
  >
    <MenuHeader>
      <div
        className="username-wrapper"
      >
        <Text
          className="bold"
          margin="none"
        >
          Nev Aa
        </Text>
        <Text
          className="contrast"
          color="inherit"
          margin="none"
        >
          @undefined
        </Text>
      </div>
    </MenuHeader>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Out of office"
        extraText="Automatic Replies are enabled"
        onClick={[Function]}
        show={false}
        text="Out of office"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemToggleModalRedux
        ariaLabel="Set a custom status"
        className="MenuItem__primary-text custom_status__row"
        dialogType={[Function]}
        id="status-menu-custom-status"
        modalId="custom_status"
        show={true}
      >
        <span
          className="custom_status__container"
        >
          <span
            className="custom_status__icon"
          >
            <EmojiIcon
              className="custom-status-emoji"
            />
          </span>
          <CustomStatusText
            className="custom_status__text"
            text="Set a custom status"
            tooltipDirection="bottom"
          />
        </span>
      </MenuItemToggleModalRedux>
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Online"
        icon={
          <StatusIcon
            className="status-icon"
            status="online"
          />
        }
        id="status-menu-online"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        sibling={false}
        text="Online"
      />
      <MenuItemAction
        ariaLabel="Away"
        icon={
          <StatusIcon
            className="status-icon"
            status="away"
          />
        }
        id="status-menu-away"
        onClick={[Function]}
        rightDecorator={
          <CheckIcon
            color="var(--button-bg)"
            size={16}
          />
        }
        show={true}
        text="Away"
      />
      <SubMenuItem
        ariaLabel="Do not disturb. Disables all notifications"
        direction="left"
        extraText="Disables all notifications"
        icon={
          <StatusIcon
            className="status-icon"
            status="dnd"
          />
        }
        id="status-menu-dnd"
        openUp={false}
        renderSelected={true}
        rightDecorator={false}
        show={true}
        subMenu={
          Array [
            Object {
              "direction": "right",
              "id": "dndSubMenu-header",
              "isHeader": true,
              "text": "Disable notifications until:",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-thirty_minutes",
              "text": "30 mins",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-one_hour",
              "text": "1 hour",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-two_hours",
              "text": "2 hours",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-tomorrow",
              "text": <React.Fragment>
                Tomorrow
                <span
                  className="dndTime-tomorrow_timestamp"
                >
                  <FormattedDate
                    value={2021-11-03T09:00:57.000Z}
                    weekday="short"
                  />
                  , 
                  <FormattedTime
                    hour12={true}
                    timeStyle="short"
                    value={2021-11-03T09:00:57.000Z}
                  />
                </span>
              </React.Fragment>,
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-custom",
              "text": "Custom",
            },
          ]
        }
        subMenuClass="pl-4"
        text="Do not disturb"
      />
      <MenuItemAction
        ariaLabel="Offline"
        icon={
          <StatusIcon
            className="status-icon"
            status="offline"
          />
        }
        id="status-menu-offline"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        text="Offline"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Profile"
        icon={
          <AccountOutlineIcon
            className="profile__icon"
            color="rgba(var(--center-channel-color-rgb), 0.56)"
            size={16}
          />
        }
        id="accountSettings"
        modalId="user_settings"
        onClick={[Function]}
        show={true}
        sibling={false}
        text="Profile"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <span
        className="logout__icon"
      >
        <MenuItemAction
          icon={
            <ExitToAppIcon
              color="rgba(var(--center-channel-color-rgb), 0.56)"
              size={16}
            />
          }
          id="logout"
          onClick={[Function]}
          show={true}
          text="Log Out"
        />
      </span>
    </Memo(MenuGroup)>
  </Menu>
</MenuWrapper>
`;

exports[`components/StatusDropdown should match snapshot with custom status expired 1`] = `
<MenuWrapper
  animationComponent={[Function]}
  className="status-dropdown-menu status-dropdown-menu-global-header active"
  onToggle={[Function]}
  open={true}
>
  <button
    aria-controls="statusDropdownMenu"
    aria-expanded={true}
    aria-label="Current status: Away. Select to open profile and status menu."
    className="status-wrapper style--none"
  >
    <Memo(CustomStatusEmoji)
      emojiStyle={
        Object {
          "marginRight": "6px",
        }
      }
      onClick={[Function]}
      showTooltip={true}
      tooltipDirection="bottom"
    />
    <div
      className="status"
    >
      <StatusIcon
        size="sm"
        status="away"
      />
    </div>
  </button>
  <Menu
    ariaLabel="Set a status"
    id="statusDropdownMenu"
    listId="status-drop-down-menu-list"
  >
    <MenuHeader>
      <div
        className="username-wrapper"
      >
        <Text
          className="bold"
          margin="none"
        >
          Nev Aa
        </Text>
        <Text
          className="contrast"
          color="inherit"
          margin="none"
        >
          @undefined
        </Text>
      </div>
    </MenuHeader>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Out of office"
        extraText="Automatic Replies are enabled"
        onClick={[Function]}
        show={false}
        text="Out of office"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemToggleModalRedux
        ariaLabel="Set a custom status"
        className="MenuItem__primary-text custom_status__row"
        dialogType={[Function]}
        id="status-menu-custom-status"
        modalId="custom_status"
        show={true}
      >
        <span
          className="custom_status__container"
        >
          <span
            className="custom_status__icon"
          >
            <EmojiIcon
              className="custom-status-emoji"
            />
          </span>
          <CustomStatusText
            className="custom_status__text"
            text="Set a custom status"
            tooltipDirection="bottom"
          />
        </span>
      </MenuItemToggleModalRedux>
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Online"
        icon={
          <StatusIcon
            className="status-icon"
            status="online"
          />
        }
        id="status-menu-online"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        sibling={false}
        text="Online"
      />
      <MenuItemAction
        ariaLabel="Away"
        icon={
          <StatusIcon
            className="status-icon"
            status="away"
          />
        }
        id="status-menu-away"
        onClick={[Function]}
        rightDecorator={
          <CheckIcon
            color="var(--button-bg)"
            size={16}
          />
        }
        show={true}
        text="Away"
      />
      <SubMenuItem
        ariaLabel="Do not disturb. Disables all notifications"
        direction="left"
        extraText="Disables all notifications"
        icon={
          <StatusIcon
            className="status-icon"
            status="dnd"
          />
        }
        id="status-menu-dnd"
        openUp={false}
        renderSelected={true}
        rightDecorator={false}
        show={true}
        subMenu={
          Array [
            Object {
              "direction": "right",
              "id": "dndSubMenu-header",
              "isHeader": true,
              "text": "Disable notifications until:",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-thirty_minutes",
              "text": "30 mins",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-one_hour",
              "text": "1 hour",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-two_hours",
              "text": "2 hours",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-tomorrow",
              "text": <React.Fragment>
                Tomorrow
                <span
                  className="dndTime-tomorrow_timestamp"
                >
                  <FormattedDate
                    value={2021-11-03T09:00:57.000Z}
                    weekday="short"
                  />
                  , 
                  <FormattedTime
                    hour12={true}
                    timeStyle="short"
                    value={2021-11-03T09:00:57.000Z}
                  />
                </span>
              </React.Fragment>,
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-custom",
              "text": "Custom",
            },
          ]
        }
        subMenuClass="pl-4"
        text="Do not disturb"
      />
      <MenuItemAction
        ariaLabel="Offline"
        icon={
          <StatusIcon
            className="status-icon"
            status="offline"
          />
        }
        id="status-menu-offline"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        text="Offline"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Profile"
        icon={
          <AccountOutlineIcon
            className="profile__icon"
            color="rgba(var(--center-channel-color-rgb), 0.56)"
            size={16}
          />
        }
        id="accountSettings"
        modalId="user_settings"
        onClick={[Function]}
        show={true}
        sibling={false}
        text="Profile"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <span
        className="logout__icon"
      >
        <MenuItemAction
          icon={
            <ExitToAppIcon
              color="rgba(var(--center-channel-color-rgb), 0.56)"
              size={16}
            />
          }
          id="logout"
          onClick={[Function]}
          show={true}
          text="Log Out"
        />
      </span>
    </Memo(MenuGroup)>
  </Menu>
</MenuWrapper>
`;

exports[`components/StatusDropdown should match snapshot with custom status pulsating dot enabled 1`] = `
<MenuWrapper
  animationComponent={[Function]}
  className="status-dropdown-menu status-dropdown-menu-global-header active"
  onToggle={[Function]}
  open={true}
>
  <button
    aria-controls="statusDropdownMenu"
    aria-expanded={true}
    aria-label="Current status: Away. Select to open profile and status menu."
    className="status-wrapper style--none"
  >
    <Memo(CustomStatusEmoji)
      emojiStyle={
        Object {
          "marginRight": "6px",
        }
      }
      onClick={[Function]}
      showTooltip={true}
      tooltipDirection="bottom"
    />
    <div
      className="status"
    >
      <StatusIcon
        size="sm"
        status="away"
      />
    </div>
  </button>
  <Menu
    ariaLabel="Set a status"
    id="statusDropdownMenu"
    listId="status-drop-down-menu-list"
  >
    <MenuHeader>
      <div
        className="username-wrapper"
      >
        <Text
          className="bold"
          margin="none"
        >
          Nev Aa
        </Text>
        <Text
          className="contrast"
          color="inherit"
          margin="none"
        >
          @undefined
        </Text>
      </div>
    </MenuHeader>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Out of office"
        extraText="Automatic Replies are enabled"
        onClick={[Function]}
        show={false}
        text="Out of office"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemToggleModalRedux
        ariaLabel="Set a custom status"
        className="MenuItem__primary-text custom_status__row"
        dialogType={[Function]}
        id="status-menu-custom-status"
        modalId="custom_status"
        show={true}
      >
        <span
          className="custom_status__container"
        >
          <span
            className="custom_status__icon"
          >
            <EmojiIcon
              className="custom-status-emoji"
            />
          </span>
          <CustomStatusText
            className="custom_status__text"
            text="Set a custom status"
            tooltipDirection="bottom"
          />
          <PulsatingDot />
        </span>
      </MenuItemToggleModalRedux>
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Online"
        icon={
          <StatusIcon
            className="status-icon"
            status="online"
          />
        }
        id="status-menu-online"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        sibling={false}
        text="Online"
      />
      <MenuItemAction
        ariaLabel="Away"
        icon={
          <StatusIcon
            className="status-icon"
            status="away"
          />
        }
        id="status-menu-away"
        onClick={[Function]}
        rightDecorator={
          <CheckIcon
            color="var(--button-bg)"
            size={16}
          />
        }
        show={true}
        text="Away"
      />
      <SubMenuItem
        ariaLabel="Do not disturb. Disables all notifications"
        direction="left"
        extraText="Disables all notifications"
        icon={
          <StatusIcon
            className="status-icon"
            status="dnd"
          />
        }
        id="status-menu-dnd"
        openUp={false}
        renderSelected={true}
        rightDecorator={false}
        show={true}
        subMenu={
          Array [
            Object {
              "direction": "right",
              "id": "dndSubMenu-header",
              "isHeader": true,
              "text": "Disable notifications until:",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-thirty_minutes",
              "text": "30 mins",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-one_hour",
              "text": "1 hour",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-two_hours",
              "text": "2 hours",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-tomorrow",
              "text": <React.Fragment>
                Tomorrow
                <span
                  className="dndTime-tomorrow_timestamp"
                >
                  <FormattedDate
                    value={2021-11-03T09:00:57.000Z}
                    weekday="short"
                  />
                  , 
                  <FormattedTime
                    hour12={true}
                    timeStyle="short"
                    value={2021-11-03T09:00:57.000Z}
                  />
                </span>
              </React.Fragment>,
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-custom",
              "text": "Custom",
            },
          ]
        }
        subMenuClass="pl-4"
        text="Do not disturb"
      />
      <MenuItemAction
        ariaLabel="Offline"
        icon={
          <StatusIcon
            className="status-icon"
            status="offline"
          />
        }
        id="status-menu-offline"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        text="Offline"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Profile"
        icon={
          <AccountOutlineIcon
            className="profile__icon"
            color="rgba(var(--center-channel-color-rgb), 0.56)"
            size={16}
          />
        }
        id="accountSettings"
        modalId="user_settings"
        onClick={[Function]}
        show={true}
        sibling={false}
        text="Profile"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <span
        className="logout__icon"
      >
        <MenuItemAction
          icon={
            <ExitToAppIcon
              color="rgba(var(--center-channel-color-rgb), 0.56)"
              size={16}
            />
          }
          id="logout"
          onClick={[Function]}
          show={true}
          text="Log Out"
        />
      </span>
    </Memo(MenuGroup)>
  </Menu>
</MenuWrapper>
`;

exports[`components/StatusDropdown should match snapshot with profile picture URL 1`] = `
<MenuWrapper
  animationComponent={[Function]}
  className="status-dropdown-menu status-dropdown-menu-global-header"
  onToggle={[Function]}
  open={false}
>
  <button
    aria-controls="statusDropdownMenu"
    aria-expanded={false}
    aria-label="Current status: Away. Select to open profile and status menu."
    className="status-wrapper style--none"
  >
    <Memo(CustomStatusEmoji)
      emojiStyle={
        Object {
          "marginRight": "6px",
        }
      }
      onClick={[Function]}
      showTooltip={true}
      tooltipDirection="bottom"
    />
    <Memo(Avatar)
      size="sm"
      url="http://localhost:8065/api/v4/users/jsx5jmdiyjyuzp9rzwfaf5pwjo/image?_=1590519110944"
    />
    <div
      className="status"
    >
      <StatusIcon
        size="sm"
        status="away"
      />
    </div>
  </button>
  <Menu
    ariaLabel="Set a status"
    id="statusDropdownMenu"
    listId="status-drop-down-menu-list"
  >
    <MenuHeader>
      <Memo(Avatar)
        size="lg"
        url="http://localhost:8065/api/v4/users/jsx5jmdiyjyuzp9rzwfaf5pwjo/image?_=1590519110944"
      />
      <div
        className="username-wrapper"
      >
        <Text
          className="bold"
          margin="none"
        >
          Nev Aa
        </Text>
        <Text
          className="contrast"
          color="inherit"
          margin="none"
        >
          @undefined
        </Text>
      </div>
    </MenuHeader>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Out of office"
        extraText="Automatic Replies are enabled"
        onClick={[Function]}
        show={false}
        text="Out of office"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Online"
        icon={
          <StatusIcon
            className="status-icon"
            status="online"
          />
        }
        id="status-menu-online"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        sibling={false}
        text="Online"
      />
      <MenuItemAction
        ariaLabel="Away"
        icon={
          <StatusIcon
            className="status-icon"
            status="away"
          />
        }
        id="status-menu-away"
        onClick={[Function]}
        rightDecorator={
          <CheckIcon
            color="var(--button-bg)"
            size={16}
          />
        }
        show={true}
        text="Away"
      />
      <SubMenuItem
        ariaLabel="Do not disturb. Disables all notifications"
        direction="left"
        extraText="Disables all notifications"
        icon={
          <StatusIcon
            className="status-icon"
            status="dnd"
          />
        }
        id="status-menu-dnd"
        openUp={false}
        renderSelected={true}
        rightDecorator={false}
        show={true}
        subMenu={
          Array [
            Object {
              "direction": "right",
              "id": "dndSubMenu-header",
              "isHeader": true,
              "text": "Disable notifications until:",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-thirty_minutes",
              "text": "30 mins",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-one_hour",
              "text": "1 hour",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-two_hours",
              "text": "2 hours",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-tomorrow",
              "text": <React.Fragment>
                Tomorrow
                <span
                  className="dndTime-tomorrow_timestamp"
                >
                  <FormattedDate
                    value={2021-11-03T09:00:57.000Z}
                    weekday="short"
                  />
                  , 
                  <FormattedTime
                    hour12={true}
                    timeStyle="short"
                    value={2021-11-03T09:00:57.000Z}
                  />
                </span>
              </React.Fragment>,
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-custom",
              "text": "Custom",
            },
          ]
        }
        subMenuClass="pl-4"
        text="Do not disturb"
      />
      <MenuItemAction
        ariaLabel="Offline"
        icon={
          <StatusIcon
            className="status-icon"
            status="offline"
          />
        }
        id="status-menu-offline"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        text="Offline"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Profile"
        icon={
          <AccountOutlineIcon
            className="profile__icon"
            color="rgba(var(--center-channel-color-rgb), 0.56)"
            size={16}
          />
        }
        id="accountSettings"
        modalId="user_settings"
        onClick={[Function]}
        show={true}
        sibling={false}
        text="Profile"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <span
        className="logout__icon"
      >
        <MenuItemAction
          icon={
            <ExitToAppIcon
              color="rgba(var(--center-channel-color-rgb), 0.56)"
              size={16}
            />
          }
          id="logout"
          onClick={[Function]}
          show={true}
          text="Log Out"
        />
      </span>
    </Memo(MenuGroup)>
  </Menu>
</MenuWrapper>
`;

exports[`components/StatusDropdown should match snapshot with status dropdown open 1`] = `
<MenuWrapper
  animationComponent={[Function]}
  className="status-dropdown-menu status-dropdown-menu-global-header active"
  onToggle={[Function]}
  open={true}
>
  <button
    aria-controls="statusDropdownMenu"
    aria-expanded={true}
    aria-label="Current status: Away. Select to open profile and status menu."
    className="status-wrapper style--none"
  >
    <Memo(CustomStatusEmoji)
      emojiStyle={
        Object {
          "marginRight": "6px",
        }
      }
      onClick={[Function]}
      showTooltip={true}
      tooltipDirection="bottom"
    />
    <div
      className="status"
    >
      <StatusIcon
        size="sm"
        status="away"
      />
    </div>
  </button>
  <Menu
    ariaLabel="Set a status"
    id="statusDropdownMenu"
    listId="status-drop-down-menu-list"
  >
    <MenuHeader>
      <div
        className="username-wrapper"
      >
        <Text
          className="bold"
          margin="none"
        >
          Nev Aa
        </Text>
        <Text
          className="contrast"
          color="inherit"
          margin="none"
        >
          @undefined
        </Text>
      </div>
    </MenuHeader>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Out of office"
        extraText="Automatic Replies are enabled"
        onClick={[Function]}
        show={false}
        text="Out of office"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Online"
        icon={
          <StatusIcon
            className="status-icon"
            status="online"
          />
        }
        id="status-menu-online"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        sibling={false}
        text="Online"
      />
      <MenuItemAction
        ariaLabel="Away"
        icon={
          <StatusIcon
            className="status-icon"
            status="away"
          />
        }
        id="status-menu-away"
        onClick={[Function]}
        rightDecorator={
          <CheckIcon
            color="var(--button-bg)"
            size={16}
          />
        }
        show={true}
        text="Away"
      />
      <SubMenuItem
        ariaLabel="Do not disturb. Disables all notifications"
        direction="left"
        extraText="Disables all notifications"
        icon={
          <StatusIcon
            className="status-icon"
            status="dnd"
          />
        }
        id="status-menu-dnd"
        openUp={false}
        renderSelected={true}
        rightDecorator={false}
        show={true}
        subMenu={
          Array [
            Object {
              "direction": "right",
              "id": "dndSubMenu-header",
              "isHeader": true,
              "text": "Disable notifications until:",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-thirty_minutes",
              "text": "30 mins",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-one_hour",
              "text": "1 hour",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-two_hours",
              "text": "2 hours",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-tomorrow",
              "text": <React.Fragment>
                Tomorrow
                <span
                  className="dndTime-tomorrow_timestamp"
                >
                  <FormattedDate
                    value={2021-11-03T09:00:57.000Z}
                    weekday="short"
                  />
                  , 
                  <FormattedTime
                    hour12={true}
                    timeStyle="short"
                    value={2021-11-03T09:00:57.000Z}
                  />
                </span>
              </React.Fragment>,
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-custom",
              "text": "Custom",
            },
          ]
        }
        subMenuClass="pl-4"
        text="Do not disturb"
      />
      <MenuItemAction
        ariaLabel="Offline"
        icon={
          <StatusIcon
            className="status-icon"
            status="offline"
          />
        }
        id="status-menu-offline"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        text="Offline"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Profile"
        icon={
          <AccountOutlineIcon
            className="profile__icon"
            color="rgba(var(--center-channel-color-rgb), 0.56)"
            size={16}
          />
        }
        id="accountSettings"
        modalId="user_settings"
        onClick={[Function]}
        show={true}
        sibling={false}
        text="Profile"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <span
        className="logout__icon"
      >
        <MenuItemAction
          icon={
            <ExitToAppIcon
              color="rgba(var(--center-channel-color-rgb), 0.56)"
              size={16}
            />
          }
          id="logout"
          onClick={[Function]}
          show={true}
          text="Log Out"
        />
      </span>
    </Memo(MenuGroup)>
  </Menu>
</MenuWrapper>
`;

exports[`components/StatusDropdown should not show clear status button when custom status is not set 1`] = `
<MenuWrapper
  animationComponent={[Function]}
  className="status-dropdown-menu status-dropdown-menu-global-header active"
  onToggle={[Function]}
  open={true}
>
  <button
    aria-controls="statusDropdownMenu"
    aria-expanded={true}
    aria-label="Current status: Away. Select to open profile and status menu."
    className="status-wrapper style--none"
  >
    <Memo(CustomStatusEmoji)
      emojiStyle={
        Object {
          "marginRight": "6px",
        }
      }
      onClick={[Function]}
      showTooltip={true}
      tooltipDirection="bottom"
    />
    <div
      className="status"
    >
      <StatusIcon
        size="sm"
        status="away"
      />
    </div>
  </button>
  <Menu
    ariaLabel="Set a status"
    id="statusDropdownMenu"
    listId="status-drop-down-menu-list"
  >
    <MenuHeader>
      <div
        className="username-wrapper"
      >
        <Text
          className="bold"
          margin="none"
        >
          Nev Aa
        </Text>
        <Text
          className="contrast"
          color="inherit"
          margin="none"
        >
          @undefined
        </Text>
      </div>
    </MenuHeader>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Out of office"
        extraText="Automatic Replies are enabled"
        onClick={[Function]}
        show={false}
        text="Out of office"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemToggleModalRedux
        ariaLabel="Set a custom status"
        className="MenuItem__primary-text custom_status__row"
        dialogType={[Function]}
        id="status-menu-custom-status"
        modalId="custom_status"
        show={true}
      >
        <span
          className="custom_status__container"
        >
          <span
            className="custom_status__icon"
          >
            <EmojiIcon
              className="custom-status-emoji"
            />
          </span>
          <CustomStatusText
            className="custom_status__text"
            text="Set a custom status"
            tooltipDirection="bottom"
          />
        </span>
      </MenuItemToggleModalRedux>
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Online"
        icon={
          <StatusIcon
            className="status-icon"
            status="online"
          />
        }
        id="status-menu-online"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        sibling={false}
        text="Online"
      />
      <MenuItemAction
        ariaLabel="Away"
        icon={
          <StatusIcon
            className="status-icon"
            status="away"
          />
        }
        id="status-menu-away"
        onClick={[Function]}
        rightDecorator={
          <CheckIcon
            color="var(--button-bg)"
            size={16}
          />
        }
        show={true}
        text="Away"
      />
      <SubMenuItem
        ariaLabel="Do not disturb. Disables all notifications"
        direction="left"
        extraText="Disables all notifications"
        icon={
          <StatusIcon
            className="status-icon"
            status="dnd"
          />
        }
        id="status-menu-dnd"
        openUp={false}
        renderSelected={true}
        rightDecorator={false}
        show={true}
        subMenu={
          Array [
            Object {
              "direction": "right",
              "id": "dndSubMenu-header",
              "isHeader": true,
              "text": "Disable notifications until:",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-thirty_minutes",
              "text": "30 mins",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-one_hour",
              "text": "1 hour",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-two_hours",
              "text": "2 hours",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-tomorrow",
              "text": <React.Fragment>
                Tomorrow
                <span
                  className="dndTime-tomorrow_timestamp"
                >
                  <FormattedDate
                    value={2021-11-03T09:00:57.000Z}
                    weekday="short"
                  />
                  , 
                  <FormattedTime
                    hour12={true}
                    timeStyle="short"
                    value={2021-11-03T09:00:57.000Z}
                  />
                </span>
              </React.Fragment>,
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-custom",
              "text": "Custom",
            },
          ]
        }
        subMenuClass="pl-4"
        text="Do not disturb"
      />
      <MenuItemAction
        ariaLabel="Offline"
        icon={
          <StatusIcon
            className="status-icon"
            status="offline"
          />
        }
        id="status-menu-offline"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        text="Offline"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Profile"
        icon={
          <AccountOutlineIcon
            className="profile__icon"
            color="rgba(var(--center-channel-color-rgb), 0.56)"
            size={16}
          />
        }
        id="accountSettings"
        modalId="user_settings"
        onClick={[Function]}
        show={true}
        sibling={false}
        text="Profile"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <span
        className="logout__icon"
      >
        <MenuItemAction
          icon={
            <ExitToAppIcon
              color="rgba(var(--center-channel-color-rgb), 0.56)"
              size={16}
            />
          }
          id="logout"
          onClick={[Function]}
          show={true}
          text="Log Out"
        />
      </span>
    </Memo(MenuGroup)>
  </Menu>
</MenuWrapper>
`;

exports[`components/StatusDropdown should show clear status button when custom status is set 1`] = `
<MenuWrapper
  animationComponent={[Function]}
  className="status-dropdown-menu status-dropdown-menu-global-header active"
  onToggle={[Function]}
  open={true}
>
  <button
    aria-controls="statusDropdownMenu"
    aria-expanded={true}
    aria-label="Current status: Away. Select to open profile and status menu."
    className="status-wrapper style--none"
  >
    <Memo(CustomStatusEmoji)
      emojiStyle={
        Object {
          "marginRight": "6px",
        }
      }
      onClick={[Function]}
      showTooltip={true}
      tooltipDirection="bottom"
    />
    <div
      className="status"
    >
      <StatusIcon
        size="sm"
        status="away"
      />
    </div>
  </button>
  <Menu
    ariaLabel="Set a status"
    id="statusDropdownMenu"
    listId="status-drop-down-menu-list"
  >
    <MenuHeader>
      <div
        className="username-wrapper"
      >
        <Text
          className="bold"
          margin="none"
        >
          Nev Aa
        </Text>
        <Text
          className="contrast"
          color="inherit"
          margin="none"
        >
          @undefined
        </Text>
      </div>
    </MenuHeader>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Out of office"
        extraText="Automatic Replies are enabled"
        onClick={[Function]}
        show={false}
        text="Out of office"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemToggleModalRedux
        ariaLabel="In a meeting"
        className="MenuItem__primary-text custom_status__row"
        dialogType={[Function]}
        id="status-menu-custom-status"
        modalId="custom_status"
        show={true}
      >
        <span
          className="custom_status__container"
        >
          <span
            className="custom_status__icon"
          >
            <span
              className="d-flex"
            >
              <Memo(CustomStatusEmoji)
                emojiStyle={
                  Object {
                    "marginLeft": 0,
                  }
                }
                showTooltip={false}
              />
            </span>
          </span>
          <CustomStatusText
            className="custom_status__text"
            text="In a meeting"
            tooltipDirection="bottom"
          />
          <div
            className="status-dropdown-menu__clear-container input-clear visible"
            onClick={[Function]}
            onTouchEnd={[Function]}
          >
            <OverlayTrigger
              defaultOverlayShown={false}
              delayShow={400}
              overlay={
                <Tooltip
                  id="InputClearTooltip"
                >
                  <Memo(MemoizedFormattedMessage)
                    defaultMessage="Clear"
                    id="input.clear"
                  />
                </Tooltip>
              }
              placement="left"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <span
                aria-hidden="true"
                className="input-clear-x"
              >
                <i
                  className="icon icon-close-circle"
                />
              </span>
            </OverlayTrigger>
          </div>
        </span>
        <Memo(ExpiryTime)
          className="custom_status__expiry padded"
          time="2021-05-03T23:59:59.000Z"
          withinBrackets={true}
        />
      </MenuItemToggleModalRedux>
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Online"
        icon={
          <StatusIcon
            className="status-icon"
            status="online"
          />
        }
        id="status-menu-online"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        sibling={false}
        text="Online"
      />
      <MenuItemAction
        ariaLabel="Away"
        icon={
          <StatusIcon
            className="status-icon"
            status="away"
          />
        }
        id="status-menu-away"
        onClick={[Function]}
        rightDecorator={
          <CheckIcon
            color="var(--button-bg)"
            size={16}
          />
        }
        show={true}
        text="Away"
      />
      <SubMenuItem
        ariaLabel="Do not disturb. Disables all notifications"
        direction="left"
        extraText="Disables all notifications"
        icon={
          <StatusIcon
            className="status-icon"
            status="dnd"
          />
        }
        id="status-menu-dnd"
        openUp={false}
        renderSelected={true}
        rightDecorator={false}
        show={true}
        subMenu={
          Array [
            Object {
              "direction": "right",
              "id": "dndSubMenu-header",
              "isHeader": true,
              "text": "Disable notifications until:",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-thirty_minutes",
              "text": "30 mins",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-one_hour",
              "text": "1 hour",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-two_hours",
              "text": "2 hours",
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-tomorrow",
              "text": <React.Fragment>
                Tomorrow
                <span
                  className="dndTime-tomorrow_timestamp"
                >
                  <FormattedDate
                    value={2021-11-03T09:00:57.000Z}
                    weekday="short"
                  />
                  , 
                  <FormattedTime
                    hour12={true}
                    timeStyle="short"
                    value={2021-11-03T09:00:57.000Z}
                  />
                </span>
              </React.Fragment>,
            },
            Object {
              "action": [Function],
              "direction": "right",
              "id": "dndTime-custom",
              "text": "Custom",
            },
          ]
        }
        subMenuClass="pl-4"
        text="Do not disturb"
      />
      <MenuItemAction
        ariaLabel="Offline"
        icon={
          <StatusIcon
            className="status-icon"
            status="offline"
          />
        }
        id="status-menu-offline"
        onClick={[Function]}
        rightDecorator={false}
        show={true}
        text="Offline"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        ariaLabel="Profile"
        icon={
          <AccountOutlineIcon
            className="profile__icon"
            color="rgba(var(--center-channel-color-rgb), 0.56)"
            size={16}
          />
        }
        id="accountSettings"
        modalId="user_settings"
        onClick={[Function]}
        show={true}
        sibling={false}
        text="Profile"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <span
        className="logout__icon"
      >
        <MenuItemAction
          icon={
            <ExitToAppIcon
              color="rgba(var(--center-channel-color-rgb), 0.56)"
              size={16}
            />
          }
          id="logout"
          onClick={[Function]}
          show={true}
          text="Log Out"
        />
      </span>
    </Memo(MenuGroup)>
  </Menu>
</MenuWrapper>
`;
